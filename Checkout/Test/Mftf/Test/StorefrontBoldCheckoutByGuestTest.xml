<?xml version="1.0" encoding="UTF-8"?>
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontBoldCheckoutByGuestTest">
        <annotations>
            <features value="Bold Checkout"/>
            <stories value="Checkout as Guest"/>
            <title value="Checking placing order by Guest via Bold Checkout"/>
            <description value="Guest should be able to place an order via Bold Checkout"/>
            <severity value="MAJOR"/>
            <group value="bold_checkout"/>
            <group value="bold_checkout_standard"/>
        </annotations>
        <before>
            <!-- Set configuration -->
            <magentoCLI command="config:set {{EnableFlatRateConfigData.path}} {{EnableFlatRateConfigData.value}}" stepKey="enableFlatRateShippingMethod"/>
            <!-- Create entities -->
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <createData entity="ApiSimpleProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <!-- Run entities sync -->
<!--            <actionGroup ref="CliConsumerStartActionGroup" stepKey="syncProducts">-->
<!--                <argument name="consumerName" value="{{BoldCheckoutSyncProductsConsumerData.consumerName}}"/>-->
<!--                <argument name="maxMessages" value="{{BoldCheckoutSyncProductsConsumerData.messageLimit}}"/>-->
<!--            </actionGroup>-->
<!--            <magentoCLI command="queue:consumers:start {{BoldCheckoutSyncProductsConsumerData.consumerName}}" timeout="10" stepKey="syncProducts"/>-->
        </before>
        <after>
            <!-- Delete entities -->
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <actionGroup ref="DeleteCustomerByEmailActionGroup" stepKey="deleteGuestEntity">
                <argument name="email" value="{{Guest.email}}"/>
            </actionGroup>
            <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="resetDataGrid"/>
            <!-- Logout from Magento admin -->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromMagentoAdmin"/>
        </after>

        <!-- Go to product page -->
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openProductPage">
<!--            <argument name="productUrl" value="$createProduct.custom_attributes[url_key]$"/>-->
            <argument name="productUrl" value="test-product"/>
        </actionGroup>

        <!-- Add product to shopping cart -->
<!--        <actionGroup ref="AddToCartFromStorefrontProductPageActionGroup" stepKey="addProductToCart">-->
<!--            <argument name="productName" value="$createProduct.name$"/>-->
<!--        </actionGroup>-->
        <click selector="{{StorefrontProductActionSection.addToCart}}" stepKey="addProductToCart"/>
        <waitForElementVisible selector="{{StorefrontMessagesSection.success}}" stepKey="waitForProductAddedSuccessMessage"/>

        <!-- Go to shopping cart page -->
        <actionGroup ref="StorefrontCartPageOpenActionGroup" stepKey="openShoppingCartPage"/>

        <!-- Go to Bold Checkout customer info step -->
        <click selector="{{StorefrontCheckoutCartSummarySection.proceedToCheckout}}" stepKey="proceedToCheckout"/>
        <actionGroup ref="AssertStorefrontBoldCheckoutPageOpenedActionGroup" stepKey="assertBoldCheckoutCustomerInfoStepOpened"/>

        <!-- Check cart items -->
        <actionGroup ref="AssertStorefrontBoldCheckoutProductInCartItemsActionGroup" stepKey="assertProductInCartItems">
            <argument name="productName" value="Test Product"/>
            <argument name="productPrice" value="100"/>
        </actionGroup>

        <!-- Fill customer information -->
        <actionGroup ref="StorefrontBoldCheckoutFillEmailActionGroup" stepKey="fillGuestEmailField"/>

        <!-- Fill shipping address -->
        <actionGroup ref="StorefrontBoldCheckoutFillShippingAddressActionGroup" stepKey="fillShippingAddress"/>

        <!-- Go to Bold Checkout shipping lines step -->
        <click selector="{{StorefrontBoldCheckoutFormControlsSection.continueToShippingButton}}" stepKey="continueToShipping"/>
        <actionGroup ref="AssertStorefrontBoldCheckoutPageOpenedActionGroup" stepKey="assertBoldCheckoutShippingLinesStepOpened">
            <argument name="stepPath" value="shipping_lines"/>
            <argument name="breadcrumbName" value="Shipping method"/>
        </actionGroup>

        <!-- Select shipping method -->
        <actionGroup ref="StorefrontBoldCheckoutSelectShippingMethodActionGroup" stepKey="selectShippingMethod"/>

        <!-- Go to Bold Checkout payment step -->
        <click selector="{{StorefrontBoldCheckoutFormControlsSection.continueToPaymentButton}}" stepKey="continueToPayment"/>
        <actionGroup ref="AssertStorefrontBoldCheckoutPageOpenedActionGroup" stepKey="assertBoldCheckoutPaymentStepOpened">
            <argument name="stepPath" value="payment"/>
            <argument name="breadcrumbName" value="Payment method"/>
        </actionGroup>

        <!-- Select payment method -->
        <actionGroup ref="StorefrontBoldCheckoutSelectPaymentMethodActionGroup" stepKey="selectPaymentMethod"/>

        <!-- Fill credit card info -->
        <actionGroup ref="StorefrontBoldCheckoutFillCardDataActionGroup" stepKey="fillCreditCardInformation"/>

        <!-- Place order -->
        <click selector="{{StorefrontBoldCheckoutFormControlsSection.completeOrderButton}}" stepKey="placeOrder"/>
        <actionGroup ref="AssertStorefrontBoldCheckoutThankYouPageActionGroup" stepKey="assertBoldCheckoutThankYouPage"/>

        <!-- Check order recap address section -->
        <actionGroup ref="AssertStorefrontBoldCheckoutOrderRecapAddressActionGroup" stepKey="assertOrderRecapShippingAddress">
            <argument name="stateCode" value="CA"/>
        </actionGroup>
        <actionGroup ref="AssertStorefrontBoldCheckoutOrderRecapAddressActionGroup" stepKey="assertOrderRecapBillingAddress">
            <argument name="addressType" value="billing"/>
            <argument name="stateCode" value="CA"/>
        </actionGroup>

        <!-- Check order recap shipping method -->
        <see userInput="Flat Rate - Fixed" selector="{{StorefrontBoldCheckoutOrderRecapSection.shippingMethodName}}" stepKey="assertOrderRecapShippingMethod"/>

        <!-- Check order recap payment method -->
        <see userInput="{{VisaCardData.name}}" selector="{{StorefrontBoldCheckoutOrderRecapSection.cardBrandName}}" stepKey="assertOrderRecapCardBrandName"/>
        <see userInput="{{VisaCardData.lastFourDigits}}" selector="{{StorefrontBoldCheckoutOrderRecapSection.cardLastFourDigits}}" stepKey="assertOrderRecapCardLastFourDigits"/>

        <!-- Check summary totals -->
        <actionGroup ref="AssertStorefrontBoldCheckoutSummaryTotalsActionGroup" stepKey="assertSummaryTotals">
            <argument name="subtotal" value="100.00"/>
            <argument name="shippingAmount" value="5.00"/>
            <argument name="total" value="105.00"/>
            <argument name="paymentsAmount" value="105.00"/>
        </actionGroup>

        <!-- Get platform order ID -->
        <executeJS function="return publicOrderId;" stepKey="getPublicOrderId"/>
        <actionGroup ref="StorefrontBoldCheckoutGetPlatformOrderIdActionGroup" stepKey="platformOrderId">
            <argument name="publicOrderId" value="{$getPublicOrderId}"/>
        </actionGroup>

        <!-- Go to order in Magento admin -->
        <actionGroup ref="AdminLoginActionGroup" stepKey="loginToMagentoAdmin"/>
        <actionGroup ref="AdminOpenOrderByEntityIdActionGroup" stepKey="openOrderPageInMagentoAdmin">
            <argument name="entityId" value="{$getPlatformOrderId}"/>
        </actionGroup>

        <!-- Check order info in Magento admin -->
        <see userInput="Pending" selector="{{AdminOrderDetailsInformationSection.orderStatus}}" stepKey="assertOrderStatusInMagentoAdmin"/>
        <see userInput="Guest" selector="{{AdminOrderDetailsInformationSection.accountInformation}}" stepKey="assertOrderCustomerNameInMagentoAdmin"/>
        <see userInput="{{Guest.email}}" selector="{{AdminOrderDetailsInformationSection.customerEmail}}" stepKey="assertOrderCustomerEmailInMagentoAdmin"/>
        <actionGroup ref="AssertAdminOrderBillingAddressInformationActionGroup" stepKey="assertOrderBillingAddressInMagentoAdmin"/>
        <actionGroup ref="AssertAdminOrderShippingAddressInformationActionGroup" stepKey="assertOrderShippingAddressInMagentoAdmin"/>
        <actionGroup ref="AssertAdminOrderPaymentInformationActionGroup" stepKey="assertOrderPaymentInfoInMagentoAdmin"/>
        <actionGroup ref="AdminAssertOrderShippingMethodActionGroup" stepKey="assertOrderShippingInfoInMagentoAdmin"/>
        <actionGroup ref="AssertAdminOrderedItemActionGroup" stepKey="assertOrderedItemInMagentoAdmin">
            <argument name="name" value="Test Product"/>
            <argument name="sku" value="Test Product"/>
            <argument name="price" value="100"/>
            <argument name="subtotal" value="100"/>
            <argument name="rowTotal" value="100"/>
        </actionGroup>
        <actionGroup ref="AssertAdminOrderTotalsActionGroup" stepKey="assertOrderTotalsInMagentoAdmin">
            <argument name="subtotal" value="100.00"/>
            <argument name="shippingPrice" value="5.00"/>
            <argument name="grandTotal" value="105.00"/>
            <argument name="totalDue" value="105.00"/>
        </actionGroup>

        <!-- Open Checkout app on Bold Cashier -->
<!--        <actionGroup ref="AdminBoldAppsLoginToAccountActionGroup" stepKey="loginToBoldAppsAccount"/>-->
<!--        <actionGroup ref="AdminBoldAppsOpenAppActionGroup" stepKey="openCheckoutAppPage"/>-->

        <!-- Create invoice in Magento admin -->
        <actionGroup ref="StartCreateInvoiceFromOrderPageActionGroup" stepKey="startToCreateInvoiceInMagentoAdmin"/>
        <actionGroup ref="SubmitInvoiceActionGroup" stepKey="submitInvoiceInMagentoAdmin"/>

        <!-- Create shipment in Magento admin -->
        <actionGroup ref="GoToShipmentIntoOrderActionGroup" stepKey="startToCreateShipmentInMagentoAdmin"/>
        <actionGroup ref="SubmitShipmentIntoOrderActionGroup" stepKey="submitShipmentInMagentoAdmin"/>

        <!-- Create Credit Memo in Magento admin -->
        <actionGroup ref="AdminOpenInvoiceFromOrderPageActionGroup" stepKey="openInvoiceFromOrderInMagentoAdmin"/>
        <click selector="{{AdminInvoiceMainActionsSection.creditMemoButton}}" stepKey="openCreditMemoPageFromInvoiceInMagentoAdmin"/>
        <actionGroup ref="AdminSubmitCreditMemoFromInvoicePageActionGroup" stepKey="submitCreditMemoInMagentoAdmin"/>
    </test>
</tests>
